{
  "features": [
    {
      "id": "profile_pins",
      "area": "profile",
      "title": "Profile Pins",
      "status": "full-ui",
      "routes": ["/profile/:id"],
      "components": ["src/components/profile/pins/PinBoard.tsx", "src/components/profile/pins/PinCard.tsx", "src/components/profile/pins/AddPinModal.tsx"],
      "rpc": ["profile_pins_get", "profile_pins_set"],
      "flags": ["profile_pins"],
      "docs": "docs/features/profile-pins.md",
      "tests": {
        "unit": [],
        "e2e": ["tests/e2e/profile.pins.spec.ts"]
      },
      "owner": "web",
      "severity": "p0",
      "notes": "Complete with DnD reorder",
      "subFeatures": ["pin_create", "pin_reorder", "pin_delete", "pin_visibility"]
    },
    {
      "id": "pin_create",
      "area": "profile",
      "title": "Create Pin",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/profile/pins/AddPinModal.tsx"],
      "rpc": ["profile_pins_create"],
      "flags": ["profile_pins"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Modal form with validation",
      "parentFeature": "profile_pins"
    },
    {
      "id": "pin_reorder",
      "area": "profile",
      "title": "Reorder Pins",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/profile/pins/PinBoard.tsx"],
      "rpc": ["profile_pins_reorder"],
      "flags": ["profile_pins"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Drag and drop with optimistic update",
      "parentFeature": "profile_pins"
    },
    {
      "id": "pin_delete",
      "area": "profile",
      "title": "Delete Pin",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/profile/pins/PinCard.tsx"],
      "rpc": ["profile_pins_delete"],
      "flags": ["profile_pins"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Confirm dialog before delete",
      "parentFeature": "profile_pins"
    },
    {
      "id": "pin_visibility",
      "area": "profile",
      "title": "Pin Visibility Toggle",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/profile/pins/PinCard.tsx"],
      "rpc": ["profile_pins_update_visibility"],
      "flags": ["profile_pins"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Public/private toggle per pin",
      "parentFeature": "profile_pins"
    },
    {
      "id": "favorites",
      "area": "profile",
      "title": "Favorites",
      "status": "full-ui",
      "routes": ["/profile/:id/favorites"],
      "components": ["src/components/profile/FavoriteButton.tsx"],
      "rpc": ["favorite_toggle", "favorites_list"],
      "flags": ["favorites"],
      "docs": "docs/features/favorites.md",
      "tests": {
        "unit": [],
        "e2e": ["tests/e2e/favorites.spec.ts"]
      },
      "owner": "web",
      "severity": "p0",
      "notes": "Multi-type favorites with optimistic updates",
      "subFeatures": ["favorite_posts", "favorite_events", "favorite_users", "favorite_collections"]
    },
    {
      "id": "favorite_posts",
      "area": "profile",
      "title": "Favorite Posts",
      "status": "full-ui",
      "routes": ["/profile/:id/favorites/posts"],
      "components": ["src/components/profile/FavoriteButton.tsx"],
      "rpc": ["favorite_toggle"],
      "flags": ["favorites"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Save posts to favorites",
      "parentFeature": "favorites"
    },
    {
      "id": "favorite_events",
      "area": "profile",
      "title": "Favorite Events",
      "status": "full-ui",
      "routes": ["/profile/:id/favorites/events"],
      "components": ["src/components/profile/FavoriteButton.tsx"],
      "rpc": ["favorite_toggle"],
      "flags": ["favorites"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Save events to favorites",
      "parentFeature": "favorites"
    },
    {
      "id": "favorite_users",
      "area": "profile",
      "title": "Favorite Users",
      "status": "full-ui",
      "routes": ["/profile/:id/favorites/users"],
      "components": ["src/components/profile/FavoriteButton.tsx"],
      "rpc": ["favorite_toggle"],
      "flags": ["favorites"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Save users to favorites",
      "parentFeature": "favorites"
    },
    {
      "id": "favorite_collections",
      "area": "profile",
      "title": "Favorite Collections",
      "status": "shell",
      "routes": ["/profile/:id/favorites/collections"],
      "components": [],
      "rpc": ["favorite_collection_create", "favorite_collection_add"],
      "flags": ["favorites", "collections"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Organize favorites into collections",
      "parentFeature": "favorites"
    },
    {
      "id": "reposts",
      "area": "profile",
      "title": "Reposts",
      "status": "full-ui",
      "routes": ["/profile/:id/reposts"],
      "components": ["src/components/profile/RepostButton.tsx", "src/components/profile/RepostModal.tsx"],
      "rpc": ["post_repost"],
      "flags": ["reposts"],
      "docs": "docs/features/reposts.md",
      "tests": {
        "unit": [],
        "e2e": ["tests/e2e/reposts.spec.ts"]
      },
      "owner": "web",
      "severity": "p0",
      "notes": "Caption + multi-target support",
      "subFeatures": ["repost_with_caption", "repost_to_entity", "repost_quote", "repost_analytics"]
    },
    {
      "id": "repost_with_caption",
      "area": "profile",
      "title": "Repost with Caption",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/profile/RepostModal.tsx"],
      "rpc": ["post_repost"],
      "flags": ["reposts"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Add commentary when reposting",
      "parentFeature": "reposts"
    },
    {
      "id": "repost_to_entity",
      "area": "profile",
      "title": "Repost to Entity",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["post_repost_entity"],
      "flags": ["reposts", "entity_edges"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Crosspost to managed entities",
      "parentFeature": "reposts"
    },
    {
      "id": "repost_quote",
      "area": "profile",
      "title": "Quote Repost",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["post_quote"],
      "flags": ["reposts"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Quote with embedded original",
      "parentFeature": "reposts"
    },
    {
      "id": "repost_analytics",
      "area": "profile",
      "title": "Repost Analytics",
      "status": "shell",
      "routes": ["/profile/:id/reposts/analytics"],
      "components": [],
      "rpc": ["repost_analytics_get"],
      "flags": ["reposts", "analytics"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p2",
      "notes": "Track repost reach and engagement",
      "parentFeature": "reposts"
    },
    {
      "id": "linked_accounts",
      "area": "profile",
      "title": "Linked Accounts",
      "status": "full-ui",
      "routes": ["/settings/linked-accounts"],
      "components": ["src/components/profile/LinkedAccountsList.tsx", "src/components/profile/VerifyAccountModal.tsx"],
      "rpc": ["linked_account_upsert", "linked_accounts_list"],
      "flags": ["linked_accounts"],
      "docs": "docs/features/linked-accounts.md",
      "tests": {
        "unit": [],
        "e2e": ["tests/e2e/linked-accounts.spec.ts"]
      },
      "owner": "web",
      "severity": "p1",
      "notes": "Social verification flow",
      "subFeatures": ["link_twitter", "link_github", "link_discord", "link_website", "verify_ownership"]
    },
    {
      "id": "link_twitter",
      "area": "profile",
      "title": "Link Twitter",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/profile/LinkedAccountsList.tsx"],
      "rpc": ["linked_account_twitter_oauth"],
      "flags": ["linked_accounts"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "OAuth flow for Twitter",
      "parentFeature": "linked_accounts"
    },
    {
      "id": "link_github",
      "area": "profile",
      "title": "Link GitHub",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/profile/LinkedAccountsList.tsx"],
      "rpc": ["linked_account_github_oauth"],
      "flags": ["linked_accounts"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "OAuth flow for GitHub",
      "parentFeature": "linked_accounts"
    },
    {
      "id": "link_discord",
      "area": "profile",
      "title": "Link Discord",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["linked_account_discord_oauth"],
      "flags": ["linked_accounts"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p2",
      "notes": "OAuth flow for Discord",
      "parentFeature": "linked_accounts"
    },
    {
      "id": "link_website",
      "area": "profile",
      "title": "Link Website",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/profile/VerifyAccountModal.tsx"],
      "rpc": ["linked_account_website_verify"],
      "flags": ["linked_accounts"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Meta tag verification",
      "parentFeature": "linked_accounts"
    },
    {
      "id": "verify_ownership",
      "area": "profile",
      "title": "Verify Account Ownership",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/profile/VerifyAccountModal.tsx"],
      "rpc": ["linked_account_verify"],
      "flags": ["linked_accounts"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Challenge-response verification",
      "parentFeature": "linked_accounts"
    },
    {
      "id": "entity_edges",
      "area": "profile",
      "title": "Entity Relationships",
      "status": "full-ui",
      "routes": ["/entities/:id/edges"],
      "components": ["src/components/entities/EdgesManager.tsx"],
      "rpc": ["entity_edges_list", "entity_edge_create", "entity_edge_update", "entity_edge_remove"],
      "flags": ["entity_edges"],
      "docs": "docs/features/entity-edges.md",
      "tests": {
        "unit": [],
        "e2e": ["tests/e2e/entity-edges.spec.ts"]
      },
      "owner": "web",
      "severity": "p1",
      "notes": "Auto-propagate + crosspost rules",
      "subFeatures": ["edge_create", "edge_permissions", "edge_crosspost_rules", "edge_analytics"]
    },
    {
      "id": "edge_create",
      "area": "profile",
      "title": "Create Entity Edge",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/entities/EdgesManager.tsx"],
      "rpc": ["entity_edge_create"],
      "flags": ["entity_edges"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Link entities with relationship types",
      "parentFeature": "entity_edges"
    },
    {
      "id": "edge_permissions",
      "area": "profile",
      "title": "Edge Permissions",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["entity_edge_permissions_set"],
      "flags": ["entity_edges"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Define who can post/manage",
      "parentFeature": "entity_edges"
    },
    {
      "id": "edge_crosspost_rules",
      "area": "profile",
      "title": "Crosspost Rules",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["entity_edge_crosspost_rules_set"],
      "flags": ["entity_edges"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Auto-propagate content across edges",
      "parentFeature": "entity_edges"
    },
    {
      "id": "edge_analytics",
      "area": "profile",
      "title": "Edge Analytics",
      "status": "shell",
      "routes": ["/entities/:id/edges/analytics"],
      "components": [],
      "rpc": ["entity_edge_analytics_get"],
      "flags": ["entity_edges", "analytics"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p2",
      "notes": "Track engagement across entity graph",
      "parentFeature": "entity_edges"
    },
    {
      "id": "notification_lanes",
      "area": "notifications",
      "title": "Notification Lanes",
      "status": "full-ui",
      "routes": ["/notifications"],
      "components": ["src/components/notifications/LaneDrawer.tsx", "src/components/notifications/NotificationItem.tsx"],
      "rpc": ["notifications_list", "notifications_mark_read", "notifications_mark_all_read", "notifications_counts"],
      "flags": ["notification_lanes"],
      "docs": "docs/features/notification-lanes.md",
      "tests": {
        "unit": [],
        "e2e": ["tests/e2e/notifications.lanes.spec.ts"]
      },
      "owner": "platform",
      "severity": "p0",
      "notes": "Priority/Social/System lanes",
      "subFeatures": ["lane_priority", "lane_social", "lane_system", "lane_filtering", "lane_bulk_actions"]
    },
    {
      "id": "lane_priority",
      "area": "notifications",
      "title": "Priority Lane",
      "status": "full-ui",
      "routes": ["/notifications/priority"],
      "components": ["src/components/notifications/LaneDrawer.tsx"],
      "rpc": ["notifications_list"],
      "flags": ["notification_lanes"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "High-priority notifications (mentions, orders, etc.)",
      "parentFeature": "notification_lanes"
    },
    {
      "id": "lane_social",
      "area": "notifications",
      "title": "Social Lane",
      "status": "full-ui",
      "routes": ["/notifications/social"],
      "components": ["src/components/notifications/LaneDrawer.tsx"],
      "rpc": ["notifications_list"],
      "flags": ["notification_lanes"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Follows, likes, reposts",
      "parentFeature": "notification_lanes"
    },
    {
      "id": "lane_system",
      "area": "notifications",
      "title": "System Lane",
      "status": "full-ui",
      "routes": ["/notifications/system"],
      "components": ["src/components/notifications/LaneDrawer.tsx"],
      "rpc": ["notifications_list"],
      "flags": ["notification_lanes"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Platform updates, announcements",
      "parentFeature": "notification_lanes"
    },
    {
      "id": "lane_filtering",
      "area": "notifications",
      "title": "Lane Filtering",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["notifications_filter"],
      "flags": ["notification_lanes"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Filter by type, date, source",
      "parentFeature": "notification_lanes"
    },
    {
      "id": "lane_bulk_actions",
      "area": "notifications",
      "title": "Lane Bulk Actions",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/notifications/LaneDrawer.tsx"],
      "rpc": ["notifications_mark_all_read", "notifications_bulk_delete"],
      "flags": ["notification_lanes"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Mark all read, delete all per lane",
      "parentFeature": "notification_lanes"
    },
    {
      "id": "notification_prefs",
      "area": "notifications",
      "title": "Notification Preferences",
      "status": "full-ui",
      "routes": ["/settings/notifications"],
      "components": ["src/routes/settings/notifications.tsx"],
      "rpc": ["notification_prefs_get", "notification_prefs_update"],
      "flags": ["notification_prefs"],
      "docs": "docs/features/notification-prefs.md",
      "tests": {
        "unit": [],
        "e2e": ["tests/e2e/notifications.prefs.spec.ts"]
      },
      "owner": "platform",
      "severity": "p0",
      "notes": "Channels, quiet hours, daily cap",
      "subFeatures": ["prefs_channels", "prefs_categories", "prefs_quiet_hours", "prefs_daily_cap", "prefs_frequency"]
    },
    {
      "id": "prefs_channels",
      "area": "notifications",
      "title": "Notification Channels",
      "status": "full-ui",
      "routes": [],
      "components": ["src/routes/settings/notifications.tsx"],
      "rpc": ["notification_prefs_update"],
      "flags": ["notification_prefs"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Toggle in-app, email, push, SMS",
      "parentFeature": "notification_prefs"
    },
    {
      "id": "prefs_categories",
      "area": "notifications",
      "title": "Notification Categories",
      "status": "full-ui",
      "routes": [],
      "components": ["src/routes/settings/notifications.tsx"],
      "rpc": ["notification_prefs_update"],
      "flags": ["notification_prefs"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Control by type (mentions, orders, follows, etc.)",
      "parentFeature": "notification_prefs"
    },
    {
      "id": "prefs_quiet_hours",
      "area": "notifications",
      "title": "Quiet Hours",
      "status": "full-ui",
      "routes": [],
      "components": ["src/routes/settings/notifications.tsx"],
      "rpc": ["notification_prefs_update"],
      "flags": ["notification_prefs"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Suppress notifications during time window",
      "parentFeature": "notification_prefs"
    },
    {
      "id": "prefs_daily_cap",
      "area": "notifications",
      "title": "Daily Cap",
      "status": "full-ui",
      "routes": [],
      "components": ["src/routes/settings/notifications.tsx"],
      "rpc": ["notification_prefs_update"],
      "flags": ["notification_prefs"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Limit max notifications per day",
      "parentFeature": "notification_prefs"
    },
    {
      "id": "prefs_frequency",
      "area": "notifications",
      "title": "Notification Frequency",
      "status": "full-ui",
      "routes": [],
      "components": ["src/routes/settings/notifications.tsx"],
      "rpc": ["notification_prefs_update"],
      "flags": ["notification_prefs"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Real-time, hourly, daily digest",
      "parentFeature": "notification_prefs"
    },
    {
      "id": "notification_digest",
      "area": "notifications",
      "title": "Notification Digest",
      "status": "full-ui",
      "routes": ["/settings/notifications"],
      "components": ["src/components/notifications/DigestPreview.tsx"],
      "rpc": ["notification_digest_preview", "notification_digest_send_test"],
      "flags": ["notification_digest"],
      "docs": "docs/features/notification-digest.md",
      "tests": {
        "unit": [],
        "e2e": ["tests/e2e/notifications.digest.spec.ts"]
      },
      "owner": "platform",
      "severity": "p1",
      "notes": "Daily/weekly email summaries",
      "subFeatures": ["digest_preview", "digest_schedule", "digest_content", "digest_test"]
    },
    {
      "id": "digest_preview",
      "area": "notifications",
      "title": "Digest Preview",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/notifications/DigestPreview.tsx"],
      "rpc": ["notification_digest_preview"],
      "flags": ["notification_digest"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Preview digest before sending",
      "parentFeature": "notification_digest"
    },
    {
      "id": "digest_schedule",
      "area": "notifications",
      "title": "Digest Schedule",
      "status": "full-ui",
      "routes": [],
      "components": ["src/routes/settings/notifications.tsx"],
      "rpc": ["notification_prefs_update"],
      "flags": ["notification_digest"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Daily, weekly, or off",
      "parentFeature": "notification_digest"
    },
    {
      "id": "digest_content",
      "area": "notifications",
      "title": "Digest Content Selection",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["notification_digest_content_rules"],
      "flags": ["notification_digest"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p2",
      "notes": "Customize what appears in digest",
      "parentFeature": "notification_digest"
    },
    {
      "id": "digest_test",
      "area": "notifications",
      "title": "Send Test Digest",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/notifications/DigestPreview.tsx"],
      "rpc": ["notification_digest_send_test"],
      "flags": ["notification_digest"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Send test email immediately",
      "parentFeature": "notification_digest"
    },
    {
      "id": "composer_core",
      "area": "composer",
      "title": "Core Composer",
      "status": "shell",
      "routes": ["/compose"],
      "components": [],
      "rpc": ["rpc_create_post"],
      "flags": ["composer_core"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p0",
      "notes": "Text + basic media",
      "subFeatures": ["composer_text", "composer_formatting", "composer_mentions", "composer_hashtags", "composer_drafts"]
    },
    {
      "id": "composer_text",
      "area": "composer",
      "title": "Text Input",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["composer_core"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Basic text editor with char count",
      "parentFeature": "composer_core"
    },
    {
      "id": "composer_formatting",
      "area": "composer",
      "title": "Text Formatting",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["composer_core"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Bold, italic, lists, links",
      "parentFeature": "composer_core"
    },
    {
      "id": "composer_mentions",
      "area": "composer",
      "title": "Mentions",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["mentions_search"],
      "flags": ["composer_core"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "@mention autocomplete",
      "parentFeature": "composer_core"
    },
    {
      "id": "composer_hashtags",
      "area": "composer",
      "title": "Hashtags",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["hashtags_suggest"],
      "flags": ["composer_core"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "#hashtag autocomplete",
      "parentFeature": "composer_core"
    },
    {
      "id": "composer_drafts",
      "area": "composer",
      "title": "Draft Auto-save",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["draft_save", "draft_list"],
      "flags": ["composer_core"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Auto-save and restore drafts",
      "parentFeature": "composer_core"
    },
    {
      "id": "composer_media",
      "area": "composer",
      "title": "Media Upload",
      "status": "shell",
      "routes": ["/compose"],
      "components": [],
      "rpc": [],
      "flags": ["composer_media"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p0",
      "notes": "Image/video with preview",
      "subFeatures": ["media_image_upload", "media_video_upload", "media_crop", "media_alt_text", "media_multi"]
    },
    {
      "id": "media_image_upload",
      "area": "composer",
      "title": "Image Upload",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["media_upload"],
      "flags": ["composer_media"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Drag-drop or file picker",
      "parentFeature": "composer_media"
    },
    {
      "id": "media_video_upload",
      "area": "composer",
      "title": "Video Upload",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["media_upload"],
      "flags": ["composer_media"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Video with thumbnail generation",
      "parentFeature": "composer_media"
    },
    {
      "id": "media_crop",
      "area": "composer",
      "title": "Image Crop & Edit",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["composer_media"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Crop, rotate, filters",
      "parentFeature": "composer_media"
    },
    {
      "id": "media_alt_text",
      "area": "composer",
      "title": "Alt Text",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["composer_media"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Accessibility alt text",
      "parentFeature": "composer_media"
    },
    {
      "id": "media_multi",
      "area": "composer",
      "title": "Multiple Media",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["composer_media"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Upload multiple images/videos",
      "parentFeature": "composer_media"
    },
    {
      "id": "composer_schedule",
      "area": "composer",
      "title": "Scheduled Posts",
      "status": "shell",
      "routes": ["/compose"],
      "components": [],
      "rpc": [],
      "flags": ["composer_schedule"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p1",
      "notes": "DateTime picker + queue",
      "subFeatures": ["schedule_picker", "schedule_queue", "schedule_edit", "schedule_timezone"]
    },
    {
      "id": "schedule_picker",
      "area": "composer",
      "title": "Schedule DateTime Picker",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["composer_schedule"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Calendar + time picker",
      "parentFeature": "composer_schedule"
    },
    {
      "id": "schedule_queue",
      "area": "composer",
      "title": "Scheduled Queue",
      "status": "shell",
      "routes": ["/compose/scheduled"],
      "components": [],
      "rpc": ["scheduled_posts_list"],
      "flags": ["composer_schedule"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "View all scheduled posts",
      "parentFeature": "composer_schedule"
    },
    {
      "id": "schedule_edit",
      "area": "composer",
      "title": "Edit Scheduled Post",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["scheduled_post_update"],
      "flags": ["composer_schedule"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Modify or cancel scheduled posts",
      "parentFeature": "composer_schedule"
    },
    {
      "id": "schedule_timezone",
      "area": "composer",
      "title": "Timezone Support",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["composer_schedule"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Schedule in user or target timezone",
      "parentFeature": "composer_schedule"
    },
    {
      "id": "composer_crosspost",
      "area": "composer",
      "title": "Crosspost to Entities",
      "status": "shell",
      "routes": ["/compose"],
      "components": [],
      "rpc": [],
      "flags": ["composer_crosspost"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p1",
      "notes": "Multi-entity targeting",
      "subFeatures": ["crosspost_select", "crosspost_rules", "crosspost_preview"]
    },
    {
      "id": "crosspost_select",
      "area": "composer",
      "title": "Select Crosspost Targets",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["entity_edges_list"],
      "flags": ["composer_crosspost"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Multi-select entities to post to",
      "parentFeature": "composer_crosspost"
    },
    {
      "id": "crosspost_rules",
      "area": "composer",
      "title": "Crosspost Rules",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["crosspost_rules_get"],
      "flags": ["composer_crosspost"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Auto-apply entity-specific rules",
      "parentFeature": "composer_crosspost"
    },
    {
      "id": "crosspost_preview",
      "area": "composer",
      "title": "Crosspost Preview",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["composer_crosspost"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p2",
      "notes": "Preview how post appears on each entity",
      "parentFeature": "composer_crosspost"
    },
    {
      "id": "events_core",
      "area": "events",
      "title": "Event Creation",
      "status": "shell",
      "routes": ["/events/new"],
      "components": [],
      "rpc": [],
      "flags": ["events_core"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p0",
      "notes": "Basic event details",
      "subFeatures": ["event_basic_info", "event_datetime", "event_location", "event_description", "event_cover_image", "event_ticketing"]
    },
    {
      "id": "event_basic_info",
      "area": "events",
      "title": "Event Basic Info",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["event_create"],
      "flags": ["events_core"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Title, category, visibility",
      "parentFeature": "events_core"
    },
    {
      "id": "event_datetime",
      "area": "events",
      "title": "Event DateTime",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["events_core"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Start/end time with timezone",
      "parentFeature": "events_core"
    },
    {
      "id": "event_location",
      "area": "events",
      "title": "Event Location",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["events_core"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Physical or virtual location",
      "parentFeature": "events_core"
    },
    {
      "id": "event_description",
      "area": "events",
      "title": "Event Description",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["events_core"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Rich text description",
      "parentFeature": "events_core"
    },
    {
      "id": "event_cover_image",
      "area": "events",
      "title": "Event Cover Image",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["media_upload"],
      "flags": ["events_core"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Upload hero image",
      "parentFeature": "events_core"
    },
    {
      "id": "event_ticketing",
      "area": "events",
      "title": "Event Ticketing Setup",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["event_tickets_create"],
      "flags": ["events_core"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Free or paid tickets",
      "parentFeature": "events_core"
    },
    {
      "id": "events_discounts",
      "area": "events",
      "title": "Discount Codes",
      "status": "shell",
      "routes": ["/events/:id/discounts"],
      "components": [],
      "rpc": [],
      "flags": ["events_discounts"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p1",
      "notes": "Promo codes + limits",
      "subFeatures": ["discount_create", "discount_types", "discount_limits", "discount_tracking"]
    },
    {
      "id": "discount_create",
      "area": "events",
      "title": "Create Discount Code",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["discount_create"],
      "flags": ["events_discounts"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Code, amount, expiry",
      "parentFeature": "events_discounts"
    },
    {
      "id": "discount_types",
      "area": "events",
      "title": "Discount Types",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["events_discounts"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Percentage, fixed, BOGO",
      "parentFeature": "events_discounts"
    },
    {
      "id": "discount_limits",
      "area": "events",
      "title": "Discount Limits",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["events_discounts"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Max uses, per-user limit",
      "parentFeature": "events_discounts"
    },
    {
      "id": "discount_tracking",
      "area": "events",
      "title": "Discount Usage Tracking",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["discount_usage_get"],
      "flags": ["events_discounts"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Track redemptions",
      "parentFeature": "events_discounts"
    },
    {
      "id": "events_waitlist",
      "area": "events",
      "title": "Waitlist Management",
      "status": "shell",
      "routes": ["/events/:id/waitlist"],
      "components": [],
      "rpc": [],
      "flags": ["events_waitlist"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p1",
      "notes": "FIFO + manual approval",
      "subFeatures": ["waitlist_join", "waitlist_approve", "waitlist_notify", "waitlist_priority"]
    },
    {
      "id": "waitlist_join",
      "area": "events",
      "title": "Join Waitlist",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["waitlist_join"],
      "flags": ["events_waitlist"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "User joins waitlist",
      "parentFeature": "events_waitlist"
    },
    {
      "id": "waitlist_approve",
      "area": "events",
      "title": "Approve Waitlist",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["waitlist_approve"],
      "flags": ["events_waitlist"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Manual or auto-approve",
      "parentFeature": "events_waitlist"
    },
    {
      "id": "waitlist_notify",
      "area": "events",
      "title": "Waitlist Notifications",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["waitlist_notify"],
      "flags": ["events_waitlist"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Email when spot available",
      "parentFeature": "events_waitlist"
    },
    {
      "id": "waitlist_priority",
      "area": "events",
      "title": "Waitlist Priority",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["waitlist_set_priority"],
      "flags": ["events_waitlist"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p2",
      "notes": "VIP or custom ordering",
      "parentFeature": "events_waitlist"
    },
    {
      "id": "producer_console_overview",
      "area": "producer",
      "title": "Producer Dashboard",
      "status": "shell",
      "routes": ["/producer"],
      "components": [],
      "rpc": [],
      "flags": ["producer_console"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p0",
      "notes": "Events overview + quick stats",
      "subFeatures": ["producer_stats", "producer_events_list", "producer_quick_actions"]
    },
    {
      "id": "producer_stats",
      "area": "producer",
      "title": "Producer Stats",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["producer_stats_get"],
      "flags": ["producer_console"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Revenue, attendees, upcoming",
      "parentFeature": "producer_console_overview"
    },
    {
      "id": "producer_events_list",
      "area": "producer",
      "title": "Producer Events List",
      "status": "shell",
      "routes": ["/producer/events"],
      "components": [],
      "rpc": ["producer_events_list"],
      "flags": ["producer_console"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "All events managed by producer",
      "parentFeature": "producer_console_overview"
    },
    {
      "id": "producer_quick_actions",
      "area": "producer",
      "title": "Producer Quick Actions",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["producer_console"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Create event, view registrations shortcuts",
      "parentFeature": "producer_console_overview"
    },
    {
      "id": "producer_registrations",
      "area": "producer",
      "title": "Registration Management",
      "status": "shell",
      "routes": ["/producer/registrations"],
      "components": [],
      "rpc": [],
      "flags": ["producer_registrations"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p0",
      "notes": "List, filter, refund",
      "subFeatures": ["registrations_list", "registrations_filter", "registrations_refund", "registrations_check_in"]
    },
    {
      "id": "registrations_list",
      "area": "producer",
      "title": "Registrations List",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["registrations_list"],
      "flags": ["producer_registrations"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Table with search/sort",
      "parentFeature": "producer_registrations"
    },
    {
      "id": "registrations_filter",
      "area": "producer",
      "title": "Filter Registrations",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["producer_registrations"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "By event, date, status, ticket type",
      "parentFeature": "producer_registrations"
    },
    {
      "id": "registrations_refund",
      "area": "producer",
      "title": "Refund Registration",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["registration_refund"],
      "flags": ["producer_registrations"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Full or partial refund",
      "parentFeature": "producer_registrations"
    },
    {
      "id": "registrations_check_in",
      "area": "producer",
      "title": "Check-in Management",
      "status": "shell",
      "routes": ["/producer/registrations/checkin"],
      "components": [],
      "rpc": ["registration_checkin"],
      "flags": ["producer_registrations"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "QR scan or manual check-in",
      "parentFeature": "producer_registrations"
    },
    {
      "id": "producer_financials",
      "area": "producer",
      "title": "Financial Reports",
      "status": "shell",
      "routes": ["/producer/financials"],
      "components": [],
      "rpc": [],
      "flags": ["producer_financials"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p1",
      "notes": "Revenue breakdown",
      "subFeatures": ["financials_revenue", "financials_fees", "financials_payouts", "financials_reports"]
    },
    {
      "id": "financials_revenue",
      "area": "producer",
      "title": "Revenue Dashboard",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["financials_revenue_get"],
      "flags": ["producer_financials"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Gross revenue, net, trends",
      "parentFeature": "producer_financials"
    },
    {
      "id": "financials_fees",
      "area": "producer",
      "title": "Fee Breakdown",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["financials_fees_get"],
      "flags": ["producer_financials"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Platform fees, payment processing",
      "parentFeature": "producer_financials"
    },
    {
      "id": "financials_payouts",
      "area": "producer",
      "title": "Payouts",
      "status": "shell",
      "routes": ["/producer/financials/payouts"],
      "components": [],
      "rpc": ["financials_payouts_list"],
      "flags": ["producer_financials"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Payout history and schedule",
      "parentFeature": "producer_financials"
    },
    {
      "id": "financials_reports",
      "area": "producer",
      "title": "Financial Reports",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["financials_report_generate"],
      "flags": ["producer_financials"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Exportable PDF/CSV reports",
      "parentFeature": "producer_financials"
    },
    {
      "id": "producer_export_csv",
      "area": "producer",
      "title": "CSV Exports",
      "status": "shell",
      "routes": ["/producer/registrations"],
      "components": [],
      "rpc": [],
      "flags": ["producer_export"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p1",
      "notes": "Download registration data",
      "subFeatures": ["export_registrations", "export_financials", "export_attendees"]
    },
    {
      "id": "export_registrations",
      "area": "producer",
      "title": "Export Registrations CSV",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["export_registrations_csv"],
      "flags": ["producer_export"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "All registration fields",
      "parentFeature": "producer_export_csv"
    },
    {
      "id": "export_financials",
      "area": "producer",
      "title": "Export Financials CSV",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["export_financials_csv"],
      "flags": ["producer_export"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Revenue, fees, taxes",
      "parentFeature": "producer_export_csv"
    },
    {
      "id": "export_attendees",
      "area": "producer",
      "title": "Export Attendees CSV",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["export_attendees_csv"],
      "flags": ["producer_export"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Contact list for marketing",
      "parentFeature": "producer_export_csv"
    },
    {
      "id": "earnings_tiers",
      "area": "earnings",
      "title": "Earnings Tiers",
      "status": "shell",
      "routes": ["/earnings"],
      "components": [],
      "rpc": [],
      "flags": ["earnings_tiers"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p1",
      "notes": "Tier progression UI",
      "subFeatures": ["tiers_display", "tiers_benefits", "tiers_progress"]
    },
    {
      "id": "tiers_display",
      "area": "earnings",
      "title": "Tiers Display",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["earnings_tiers_get"],
      "flags": ["earnings_tiers"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Show all tiers and thresholds",
      "parentFeature": "earnings_tiers"
    },
    {
      "id": "tiers_benefits",
      "area": "earnings",
      "title": "Tier Benefits",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["earnings_tiers"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Per-tier benefit details",
      "parentFeature": "earnings_tiers"
    },
    {
      "id": "tiers_progress",
      "area": "earnings",
      "title": "Tier Progress Tracker",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["earnings_user_tier_get"],
      "flags": ["earnings_tiers"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Progress bar to next tier",
      "parentFeature": "earnings_tiers"
    },
    {
      "id": "earnings_missed",
      "area": "earnings",
      "title": "Missed Opportunities",
      "status": "shell",
      "routes": ["/earnings/missed"],
      "components": [],
      "rpc": [],
      "flags": ["earnings_missed"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p2",
      "notes": "What-if calculator",
      "subFeatures": ["missed_calculator", "missed_insights"]
    },
    {
      "id": "missed_calculator",
      "area": "earnings",
      "title": "Missed Earnings Calculator",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["earnings_missed_calculate"],
      "flags": ["earnings_missed"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p2",
      "notes": "Show potential earnings",
      "parentFeature": "earnings_missed"
    },
    {
      "id": "missed_insights",
      "area": "earnings",
      "title": "Missed Opportunities Insights",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["earnings_missed_insights"],
      "flags": ["earnings_missed"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p2",
      "notes": "Suggestions to improve earnings",
      "parentFeature": "earnings_missed"
    },
    {
      "id": "orders_core",
      "area": "earnings",
      "title": "Order Management",
      "status": "shell",
      "routes": ["/orders"],
      "components": [],
      "rpc": [],
      "flags": ["orders"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p0",
      "notes": "List orders",
      "subFeatures": ["orders_list", "orders_filter", "orders_details", "orders_tracking"]
    },
    {
      "id": "orders_list",
      "area": "earnings",
      "title": "Orders List",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["orders_list"],
      "flags": ["orders"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Paginated table with search",
      "parentFeature": "orders_core"
    },
    {
      "id": "orders_filter",
      "area": "earnings",
      "title": "Order Filters",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["orders"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "By status, date, customer",
      "parentFeature": "orders_core"
    },
    {
      "id": "orders_details",
      "area": "earnings",
      "title": "Order Details",
      "status": "shell",
      "routes": ["/orders/:id"],
      "components": [],
      "rpc": ["order_get"],
      "flags": ["orders"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p0",
      "notes": "Full order view with items, payment, shipping",
      "parentFeature": "orders_core"
    },
    {
      "id": "orders_tracking",
      "area": "earnings",
      "title": "Order Tracking",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["order_tracking_get"],
      "flags": ["orders"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Shipment tracking integration",
      "parentFeature": "orders_core"
    },
    {
      "id": "orders_refund_flow",
      "area": "earnings",
      "title": "Refund Flow",
      "status": "shell",
      "routes": ["/orders/:id/refund"],
      "components": [],
      "rpc": [],
      "flags": ["orders_refund"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "web",
      "severity": "p1",
      "notes": "Full/partial refunds",
      "subFeatures": ["refund_initiate", "refund_partial", "refund_reason", "refund_notification"]
    },
    {
      "id": "refund_initiate",
      "area": "earnings",
      "title": "Initiate Refund",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["order_refund"],
      "flags": ["orders_refund"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Start refund process",
      "parentFeature": "orders_refund_flow"
    },
    {
      "id": "refund_partial",
      "area": "earnings",
      "title": "Partial Refund",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["order_refund_partial"],
      "flags": ["orders_refund"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Refund specific amount or items",
      "parentFeature": "orders_refund_flow"
    },
    {
      "id": "refund_reason",
      "area": "earnings",
      "title": "Refund Reason",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["orders_refund"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Capture reason for analytics",
      "parentFeature": "orders_refund_flow"
    },
    {
      "id": "refund_notification",
      "area": "earnings",
      "title": "Refund Notifications",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["refund_notification_send"],
      "flags": ["orders_refund"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "web",
      "severity": "p1",
      "notes": "Email customer about refund",
      "parentFeature": "orders_refund_flow"
    },
    {
      "id": "ai_context_compiler",
      "area": "ai",
      "title": "Context Compiler",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["ai_context"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "platform",
      "severity": "p0",
      "notes": "Aggregate user context",
      "subFeatures": ["context_user_profile", "context_activity_history", "context_preferences", "context_graph"]
    },
    {
      "id": "context_user_profile",
      "area": "ai",
      "title": "User Profile Context",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_context_user_get"],
      "flags": ["ai_context"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Bio, interests, demographics",
      "parentFeature": "ai_context_compiler"
    },
    {
      "id": "context_activity_history",
      "area": "ai",
      "title": "Activity History Context",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_context_activity_get"],
      "flags": ["ai_context"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Recent actions and patterns",
      "parentFeature": "ai_context_compiler"
    },
    {
      "id": "context_preferences",
      "area": "ai",
      "title": "Preferences Context",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_context_prefs_get"],
      "flags": ["ai_context"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Explicit user preferences",
      "parentFeature": "ai_context_compiler"
    },
    {
      "id": "context_graph",
      "area": "ai",
      "title": "Social Graph Context",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_context_graph_get"],
      "flags": ["ai_context"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Connections and relationships",
      "parentFeature": "ai_context_compiler"
    },
    {
      "id": "ai_memory",
      "area": "ai",
      "title": "AI Memory",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["ai_memory"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "platform",
      "severity": "p0",
      "notes": "User memory store",
      "subFeatures": ["memory_store", "memory_retrieve", "memory_update", "memory_decay"]
    },
    {
      "id": "memory_store",
      "area": "ai",
      "title": "Store Memory",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_memory_store"],
      "flags": ["ai_memory"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Save interaction to memory",
      "parentFeature": "ai_memory"
    },
    {
      "id": "memory_retrieve",
      "area": "ai",
      "title": "Retrieve Memory",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_memory_retrieve"],
      "flags": ["ai_memory"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Recall relevant memories",
      "parentFeature": "ai_memory"
    },
    {
      "id": "memory_update",
      "area": "ai",
      "title": "Update Memory",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_memory_update"],
      "flags": ["ai_memory"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Refine existing memories",
      "parentFeature": "ai_memory"
    },
    {
      "id": "memory_decay",
      "area": "ai",
      "title": "Memory Decay",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_memory_decay"],
      "flags": ["ai_memory"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Age out old memories",
      "parentFeature": "ai_memory"
    },
    {
      "id": "ai_nba_ranker",
      "area": "ai",
      "title": "Next Best Action Ranker",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["ai_nba"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "platform",
      "severity": "p0",
      "notes": "Score NBA candidates",
      "subFeatures": ["nba_candidates", "nba_scoring", "nba_ranking", "nba_trigger"]
    },
    {
      "id": "nba_candidates",
      "area": "ai",
      "title": "NBA Candidate Generation",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_nba_candidates_get"],
      "flags": ["ai_nba"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Generate possible actions",
      "parentFeature": "ai_nba_ranker"
    },
    {
      "id": "nba_scoring",
      "area": "ai",
      "title": "NBA Scoring",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_nba_score"],
      "flags": ["ai_nba"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Score each candidate action",
      "parentFeature": "ai_nba_ranker"
    },
    {
      "id": "nba_ranking",
      "area": "ai",
      "title": "NBA Ranking",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_nba_rank"],
      "flags": ["ai_nba"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Rank and return top actions",
      "parentFeature": "ai_nba_ranker"
    },
    {
      "id": "nba_trigger",
      "area": "ai",
      "title": "NBA Trigger Points",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["ai_nba"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "When to show NBA suggestions",
      "parentFeature": "ai_nba_ranker"
    },
    {
      "id": "ai_modal",
      "area": "ai",
      "title": "AI Modal",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": [],
      "flags": ["ai_modal"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "platform",
      "severity": "p0",
      "notes": "Universal AI interface",
      "subFeatures": ["modal_chat", "modal_suggestions", "modal_actions", "modal_history"]
    },
    {
      "id": "modal_chat",
      "area": "ai",
      "title": "AI Chat Interface",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_chat"],
      "flags": ["ai_modal"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Conversational AI interface",
      "parentFeature": "ai_modal"
    },
    {
      "id": "modal_suggestions",
      "area": "ai",
      "title": "AI Suggestions",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_suggestions_get"],
      "flags": ["ai_modal"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Show suggested prompts",
      "parentFeature": "ai_modal"
    },
    {
      "id": "modal_actions",
      "area": "ai",
      "title": "AI Actions",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_action_execute"],
      "flags": ["ai_modal"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Execute AI-suggested actions",
      "parentFeature": "ai_modal"
    },
    {
      "id": "modal_history",
      "area": "ai",
      "title": "AI Chat History",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_history_get"],
      "flags": ["ai_modal"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "View past AI conversations",
      "parentFeature": "ai_modal"
    },
    {
      "id": "ai_explainability",
      "area": "ai",
      "title": "AI Explainability",
      "status": "shell",
      "routes": ["/ai/explain"],
      "components": [],
      "rpc": [],
      "flags": ["ai_explain"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "platform",
      "severity": "p1",
      "notes": "Why this suggestion?",
      "subFeatures": ["explain_suggestion", "explain_factors", "explain_alternatives"]
    },
    {
      "id": "explain_suggestion",
      "area": "ai",
      "title": "Explain Suggestion",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_explain_get"],
      "flags": ["ai_explain"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Why AI suggested this",
      "parentFeature": "ai_explainability"
    },
    {
      "id": "explain_factors",
      "area": "ai",
      "title": "Explain Factors",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_explain_factors"],
      "flags": ["ai_explain"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Key factors in decision",
      "parentFeature": "ai_explainability"
    },
    {
      "id": "explain_alternatives",
      "area": "ai",
      "title": "Alternative Actions",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_alternatives_get"],
      "flags": ["ai_explain"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p2",
      "notes": "What else you could do",
      "parentFeature": "ai_explainability"
    },
    {
      "id": "ai_prefs_tuning",
      "area": "ai",
      "title": "AI Preferences Tuning",
      "status": "shell",
      "routes": ["/settings/ai"],
      "components": [],
      "rpc": [],
      "flags": ["ai_prefs"],
      "docs": "",
      "tests": {
        "unit": [],
        "e2e": []
      },
      "owner": "platform",
      "severity": "p1",
      "notes": "Tone/style preferences",
      "subFeatures": ["prefs_tone", "prefs_verbosity", "prefs_frequency", "prefs_opt_out"]
    },
    {
      "id": "prefs_tone",
      "area": "ai",
      "title": "AI Tone Preference",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_prefs_update"],
      "flags": ["ai_prefs"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Formal, casual, friendly",
      "parentFeature": "ai_prefs_tuning"
    },
    {
      "id": "prefs_verbosity",
      "area": "ai",
      "title": "AI Verbosity",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_prefs_update"],
      "flags": ["ai_prefs"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Concise vs detailed",
      "parentFeature": "ai_prefs_tuning"
    },
    {
      "id": "prefs_frequency",
      "area": "ai",
      "title": "AI Suggestion Frequency",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_prefs_update"],
      "flags": ["ai_prefs"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "How often to show suggestions",
      "parentFeature": "ai_prefs_tuning"
    },
    {
      "id": "prefs_opt_out",
      "area": "ai",
      "title": "AI Opt-out",
      "status": "shell",
      "routes": [],
      "components": [],
      "rpc": ["ai_prefs_update"],
      "flags": ["ai_prefs"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Disable AI features",
      "parentFeature": "ai_prefs_tuning"
    },
    {
      "id": "admin_features",
      "area": "admin",
      "title": "Feature Index Admin",
      "status": "full-ui",
      "routes": ["/admin/features"],
      "components": ["src/routes/admin/features.tsx"],
      "rpc": [],
      "flags": ["admin_features"],
      "docs": "docs/features/admin-features.md",
      "tests": { "unit": [], "e2e": ["tests/e2e/admin.features.spec.ts"] },
      "owner": "platform",
      "severity": "p0",
      "notes": "View, filter, manage all features with inline editing"
    },
    {
      "id": "admin_audit",
      "area": "admin",
      "title": "Master Audit Dashboard",
      "status": "full-ui",
      "routes": ["/admin/audit"],
      "components": ["src/routes/admin/audit.tsx"],
      "rpc": [],
      "flags": ["admin_audit"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "Comprehensive platform health check with CI gates"
    },
    {
      "id": "admin_tests",
      "area": "admin",
      "title": "Test Coverage Dashboard",
      "status": "full-ui",
      "routes": ["/admin/tests"],
      "components": ["src/routes/admin/tests.tsx"],
      "rpc": [],
      "flags": ["admin_tests"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "View test coverage by feature"
    },
    {
      "id": "admin_routes",
      "area": "admin",
      "title": "Route Manifest Admin",
      "status": "full-ui",
      "routes": ["/admin/routes"],
      "components": ["src/routes/admin/routes.tsx"],
      "rpc": [],
      "flags": ["admin_routes"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Route manifest visualization"
    },
    {
      "id": "admin_components",
      "area": "admin",
      "title": "Component Registry Admin",
      "status": "full-ui",
      "routes": ["/admin/components"],
      "components": ["src/routes/admin/components.tsx"],
      "rpc": [],
      "flags": ["admin_components"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p1",
      "notes": "Component registry with feature mapping"
    },
    {
      "id": "admin_a11y",
      "area": "admin",
      "title": "Accessibility Dashboard",
      "status": "full-ui",
      "routes": ["/admin/a11y"],
      "components": ["src/routes/admin/a11y.tsx"],
      "rpc": [],
      "flags": ["admin_a11y"],
      "docs": "",
      "tests": { "unit": [], "e2e": [] },
      "owner": "platform",
      "severity": "p0",
      "notes": "axe scan results by route"
    },
    {
      "id": "dev_hud",
      "area": "admin",
      "title": "Dev HUD",
      "status": "full-ui",
      "routes": [],
      "components": ["src/components/dev/DevHUD.tsx"],
      "rpc": [],
      "flags": ["dev_hud"],
      "docs": "",
      "tests": { "unit": [], "e2e": ["tests/e2e/dev-hud.spec.ts"] },
      "owner": "platform",
      "severity": "p1",
      "notes": "On-page dev overlay with ?dev=1"
    }
  ]
}
