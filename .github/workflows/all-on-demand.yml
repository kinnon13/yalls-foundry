name: All Checks (on-demand)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run against"
        required: true
        default: "main"
      run-e2e:
        description: "Run E2E tests too?"
        type: boolean
        default: true
      node:
        description: "Node version"
        required: true
        default: "20"

concurrency:
  group: all-on-demand-${{ github.event.inputs.branch }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  CI: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ github.event.inputs.node }}
          cache: 'npm'
      - run: npm ci
      - name: Architecture + Work Report guards
        run: |
          node scripts/validate-architecture.mjs
          node scripts/validate-work-report.mjs
          node scripts/remap-legacy.mjs --check --fail-on-hit
      - run: npm run lint

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ github.event.inputs.node }}
          cache: 'npm'
      - run: npm ci
      - run: npm run typecheck

  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ github.event.inputs.node }}
          cache: 'npm'
      - run: npm ci
      - run: npm test -- --reporter=junit --outputFile=./junit.xml || npm test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results
          path: |
            junit.xml
            coverage/**
          if-no-files-found: ignore

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [unit]
    if: ${{ github.event.inputs.run-e2e == 'true' }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ github.event.inputs.node }}
          cache: 'npm'
      - run: npm ci
      - name: Install Playwright deps
        run: npx playwright install --with-deps || true
      - name: Run E2E
        run: |
          if npm run | grep -q "test:e2e"; then
            npm run test:e2e
          elif npm run | grep -q "test:smoke"; then
            npm run test:smoke
          else
            echo "No E2E script found (test:e2e or test:smoke). Skipping."; exit 0
          fi
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-artifacts
          path: |
            playwright-report/**
            cypress/screenshots/**
            cypress/videos/**
          if-no-files-found: ignore

  ops-report:
    name: Ops Report (optional)
    runs-on: ubuntu-latest
    needs: [unit]
    if: ${{ secrets.DATABASE_URL != '' }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ github.event.inputs.node }}
          cache: 'npm'
      - run: npm ci
      - name: Generate Ops Report
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: node scripts/ops-report.mjs

  done:
    name: All Good
    runs-on: ubuntu-latest
    needs: [unit, e2e, ops-report]
    if: always()
    steps:
      - run: echo "âœ… All checks completed."
