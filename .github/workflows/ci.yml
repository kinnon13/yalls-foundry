name: CI Security Gates

on:
  pull_request:
    branches: [staging, release/**, main]
  push:
    branches: [main, staging, train/db-**]
  workflow_dispatch: {}
  workflow_call: {}

jobs:
  typecheck-and-lint:
    name: TypeScript & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Type check
        run: npm run typecheck
      
      - name: Lint
        run: npm run lint
      
      - name: Build
        run: npm run build
      
      - name: Test
        run: npm run test --workspaces --if-present || echo "No tests configured"

  security-check:
    name: Security Gates
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check for hardcoded secrets
        run: |
          if grep -r "API_KEY\|SECRET\|PASSWORD" --include="*.ts" --include="*.tsx" src/; then
            echo "❌ Found hardcoded secrets"
            exit 1
          fi
          echo "✅ No hardcoded secrets found"
      
      - name: Check tenant guards
        run: |
          chmod +x ./scripts/audit/check-tenant-guards.sh
          ./scripts/audit/check-tenant-guards.sh || echo "⚠️ Tenant guard check not yet enforced"
      
      - name: Check for console.log statements
        run: |
          if grep -r "console\.log" supabase/functions --include="*.ts" | grep -v "logger.ts" | grep -v "// console.log" | grep -v "test"; then
            echo "⚠️ Found console.log statements. Use logger instead."
            # Don't fail yet - warning only
          fi
          echo "✅ Console.log check complete"
      
      - name: Check for raw DB calls
        run: |
          RAW_CALLS=$(grep -r "supabase\.from\(" supabase/functions --include="*.ts" \
            | grep -v "_shared" \
            | grep -v "tenantClient" \
            | grep -v "adminClient" \
            | grep -v "test" || true)
          
          if [ -n "$RAW_CALLS" ]; then
            echo "⚠️ Found raw DB calls without tenant guards:"
            echo "$RAW_CALLS"
            # Don't fail yet - warning only
          else
            echo "✅ No raw DB calls found"
          fi
      
      - name: Security audit summary
        if: always()
        run: |
          echo "## Security Audit Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ No hardcoded secrets" >> $GITHUB_STEP_SUMMARY
          echo "- ℹ️ Tenant guard check (warning only)" >> $GITHUB_STEP_SUMMARY
          echo "- ℹ️ Console.log check (warning only)" >> $GITHUB_STEP_SUMMARY
          echo "- ℹ️ Raw DB check (warning only)" >> $GITHUB_STEP_SUMMARY

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run integration tests
        run: npm run test:integration || echo "⚠️ Integration tests not yet configured"
        env:
          VITE_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}

  train-smoke-test:
    name: Train Smoke Test
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'db-change') || startsWith(github.ref, 'refs/heads/train/db-')
    steps:
      - uses: actions/checkout@v4
      
      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client
      
      - name: Run train smoke test
        env:
          TRAIN_DB: ${{ secrets.TRAIN_DB_URL }}
        run: |
          if [ -n "$TRAIN_DB" ]; then
            chmod +x ./scripts/audit/run-train-smoke.sh
            ./scripts/audit/run-train-smoke.sh
          else
            echo "⚠️ TRAIN_DB not configured. Skipping."
          fi
